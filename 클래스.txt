<C++의 특징>

1.객체와 캡슐화(Encapsulation)-자료 은닉

★캡슐화란 데이터를 캡슐로 싸서 외부의 접근으로부터 데이터를 보호하는 객체 지향의 특성이다.

-C++의 클래스는 멤버 변수와 멤버 함수로 이루어지고 멤버들은 외부에 공개(Public)하거나 보이지 않게(Private)선언 할 수 있다.

2. 상속성(Inheritance)- 재사용성

★객체 지향에서 상속이란 자식이 부모의 유전자를 물려받은 것과 유사하다.
★상속은 구현된 코드의 재사용성을 높여서 소프트웨어의 생산성을 높인다.

-자식클래스의 객체가 생성될 때 자식 클래스에 선언 된 멤버 뿐만 아니라 부모클래스에 선언된 멤버들도 함께 가지고 생성된다.

 

3. 다형성(Polymorphism)

★하나의 인터페이스에 처한 상황에 따라 다른 역할이나 의미를 지니게 되는 것을 말한다.

-하나의 기능이 경우에 따라 서로 다르게 보이거나 다르게 작동하는 현상을 일컫는다.

 

1.C++의 특징

<C++의 특징>

(1).객체와 캡슐화(Encapsulation)-자료 은닉

★캡슐화란 데이터를 캡슐로 싸서 외부의 접근으로부터 데이터를 보호하는 객체 지향의 특성이다.

-C++의 클래스는 멤버 변수와 멤버 함수로 이루어지고 멤버들은 외부에 공개(Public)하거나 보이지 않게(Private)선언 할 수 있다.

(2). 상속성(Inheritance)- 재사용성

★객체 지향에서 상속이란 자식이 부모의 유전자를 물려받은 것과 유사하다.
★상속은 구현된 코드의 재사용성을 높여서 소프트웨어의 생산성을 높인다.

-자식클래스의 객체가 생성될 때 자식 클래스에 선언 된 멤버 뿐만 아니라 부모클래스에 선언된 멤버들도 함께 가지고 생성된다.

 

(3). 다형성(Polymorphism)

★하나의 인터페이스에 처한 상황에 따라 다른 역할이나 의미를 지니게 되는 것을 말한다.

-하나의 기능이 경우에 따라 서로 다르게 보이거나 다르게 작동하는 현상을 일컫는다.

2. 
1)사각형 면적 구하기

#include<iostream>
using namespace std;
class CMath{
 int w,h;
public:
 CMath(){w=20; h=30;}
 int Area(){return(w*h);}
};
int main(){
 CMath me;
 cout << me.Area();
}

2)사각형 면적 구하기2

#include<iostream>
using namespace std;
class CMath{
 int w,h;
public:
 CMath(int a,int b){w=a,h=b;}
 int Area(){return(w*h);}
}; 
int main(){
 CMath me(20,30);
 cout << me.Area();
}


3.과제 소감

- 우선 교수님께서 수업에서 말씀해주신 노트에 필기를 잘하라는 말씀을 듣고 그대로 실천하고 있습니다.
키보드로 치는것과는 다르게 노트에 직접 적어보니 기억도 더 잘 된 뿐더러 집에와서 복습하는것도 더 수월한 것 같습니다.
우선 두수 더하기와 두수 곱하기를 해보면서 C++에 대해 조금씩 알아간다는 것이 매우 흥미로웠습니다. 거기에 교수님의 
친절한 강의까지 더해져 C++을 처음 접하는데있어 부담이 거의 없었습니다.
지금 C++수업에 저희들 실습 위주로 수업해주셔서 이런 프로그램을 이해하는데 더 도움이 많이 되는 것 같습니다.
앞으로 교수님의 C++수업을 더 열심히 듣겠습니다. 감사합니다.

 

4.나의 꿈과 비전

- 나 임희재는 평생에 결처 모든 일에 최선을 다하는 멋진 사람이 될 것이다.


5.내가 잘한는 것

1)요리에 소질이 있다.
2)눈썰미가 좋다.
3)내가 좋아하는 일에 의욕이 강하다.